@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
<script src="~/js/signalr/dist/browser/signalr.min.js"></script>
<script src="~/js/peerjs/dist/peerjs.min.js"></script>

@{
    ViewData["Title"] = "CallRoom";
    var currentUser = ViewBag?.CurrentUser;
}
@* <h1 style="text-align: center">@ViewBag.roomId</h1> *@

<div class="video_container" video-grid></div>
<script>
    const ROOM_ID = '@ViewBag.roomId'
    let userId = null
    let localStream = null

    const Peers = {}

    //2. khoi tao ket noi toi signalr
    var callconnection = new signalR.HubConnectionBuilder()
        .withUrl("/meeting").build()


    // khoi chay ket noi toi signalr hub
    const startSignalR = async () => {
        await callconnection.start();
        await callconnection.invoke("JoinRoom", ROOM_ID, userId)

        callconnection.on('user-connected', userId => {
            console.log(`User connected: ${userId}`)
        })
    }

    //3. khoi tao peer
    const myPeer = new Peer();

    //4. khoi chay mypeer
    // hàm này được chạy mỗi khi peer khởi động và có được một id đại diện duy nhất từ máy chủ peerjs
    myPeer.on('open', id => {
        userId = id;
        console.log("Check userId >>> ", userId);
        const startSignalR = async () => {
            await callconnection.start();
            await callconnection.invoke("JoinRoom", ROOM_ID, userId)
        }
        startSignalR();
    })

    // section stream video
    const videoGrid = document.querySelector('[video-grid]')
    const myVideo = document.createElement('video')
    myVideo.muted = false;

    // ( hàm này chỉ được gọi lần đầu tiên )
    navigator.mediaDevices.getUserMedia({
        audio: true,
        video: true
    }).then(stream => {
        addVideoStream(myVideo, stream)
        localStream = stream
    })

    callconnection.on('user-connected', id => {

        // kiểm tra có phải user ban đầu khởi tạo callroom ko
        // nếu ko thì connect tới user mới

        console.log("userId >>> ", userId)
        console.log("Id >>> ", id)
        if (userId === id)
            return;

        console.log(`User connected: ${id}`)
        connectNewUser(id, localStream);
    })

    callconnection.on("user-disconnected", id => {
        console.log(`User disconnected: ${id}`)

        if (Peers[id])
            Peers[id].close();
    })

    // khi có 1 user mới truy cập cuộc gọi
    // hàm on call này sẽ được kích hoạt
    // tác dụng để cho phép những hình ảnh của ta được truyền tới user mới
    // từ đó user mới có thể thấy được hình ảnh của ta
    myPeer.on('call', call => {
        call.answer(localStream)
        console.log("thuc hien lenh call")

        const userVideo = document.createElement('video')

        // them hình ành video của mình truyền sang user mới
        call.on('stream', userVideoStream => {
            addVideoStream(userVideo, userVideoStream)
        })

        call.on('close', () => {
            userVideo.remove()
        })
        Peers[userId] = call
    })
    const addVideoStream = (video, stream) => {
        video.srcObject = stream;
        video.addEventListener('loadedmetadata', () => {
            video.muted = false;
            video.play()
        })

        videoGrid.appendChild(video)
    }

    const connectNewUser = (userId, localStream) => {
        const userVideo = document.createElement('video')
        const call = myPeer.call(userId, localStream)

        console.log('connect new user')

        // thêm hình ảnh video của user mới bên phía mình
        call.on('stream', userVideoStream => {

            console.log('thuc hien connectusermoi')
            addVideoStream(userVideo, userVideoStream)
        })

        call.on('close', () => {
            userVideo.remove()
        })
        Peers[userId] = call
    }
</script>
@section NavContent {
    <ul class="d-flex flex-column list-unstyled text-white gap-3 my-2 mx-2 navItems">
        <div class="nav_item">
            <div class="logo_container d-flex gap-2 w-100 justify-content-center">
                <div class="logo_image_container">
                    <img src="/images/logo_2.png" class="logo_image" />
                </div>
                <h2 style="font-family: fantasy" class="navTitle m-auto">WebCommun</h2>
            </div>
        </div>
        <a asp-controller="Blog" asp-action="Index" class="nav_item">
            <div class="navIcon text-center">
                <i class="icon bi bi-house-door-fill"></i>
            </div>
            <div class="navTitle w-75 text-start my-auto">
                Blogs
            </div>
        </a>
        @if (SignInManager.IsSignedIn(User))
        {
            <a asp-action="Index" asp-controller="Friend" id="navFriends" class="nav_item">
                <div class="navIcon text-center">
                    <i class="icon bi bi-people-fill"></i>
                </div>
                <div class="navTitle w-75 text-start my-auto">
                    Friends
                </div>
            </a>

            <div class="position-relative">
                <div id="nof_icon_container">
                    <a asp-action="Nofitications" asp-controller="Blog" id="navNofitication" class="nof_icon text-center">
                        <i class="navIcon icon bi bi-bell-fill"></i>
                        <p class="navTitle w-75 text-start my-auto">Nofitications</p>
                    </a>
                </div>
                <div id="nav_item_nofitications" class="hidden nav_item_nofitications position-absolute">
                    
                    <div class="d-flex justify-content-between">
                        <strong>Nofitication</strong>
                        <a class="reload_icon" onclick="reloadAllNof('@currentUser?.Id')">
                            <i class="bi bi-arrow-clockwise"></i>
                        </a>
                    </div>

                    <div id="nav_item_nofitications_container" class="nav_item_nofitications_container">
                        @if (ViewBag.GetAllNofOfUser(currentUser?.Id) != null)
                        {
                            @foreach (var nof in ViewBag.GetAllNofOfUser(currentUser?.Id))
                            {
                                switch ( nof.Type )
                                {
                                    case "Addfriend":
                                        if (ViewBag.IsRequested(nof.SenderAccountId, nof.RecieveAccountId) == true )
                                        {
                                            <div class="nofi_card">
                                                <div class="nofi_card_content">
                                                    <a asp-action="Index" asp-controller="Profile" asp-route-id="@nof.SenderAccountId">@ViewBag.GetUserName(nof.SenderAccountId)</a> @nof.Content
                                                    <span class="nofi_card_date">@nof.Date</span>
                                                    <div id="nofi_card_actions_@nof.Id" class="nofi_card_actions">
                                                        <a onclick="handleAccept('@currentUser?.Id', @nof.Id)" class="btn btn-outline-dark">Accept</a>
                                                        <a onclick="handleDeny('@currentUser?.Id', @nof.Id)" class="btn btn-outline-dark">Deny</a>
                                                    </div>
                                                </div>
                                                <div>
                                                    <a onclick="handleDeleteNofitication(@nof.Id)">
                                                        <i class="close_icon bi bi-x"></i>
                                                    </a>
                                                </div>
                                            </div>
                                        }
                                    
                                        break;
                                    case "Comment" :
                                        <div class="nofi_card">
                                            <p class="nofi_card_content">
                                                <a asp-action="Index" asp-controller="Profile" asp-route-id="@nof.SenderAccountId">@ViewBag.GetUserName(nof.SenderAccountId)</a> @nof.Content <a asp-route-id="@nof.BlogId" asp-action="Details" asp-controller="Blog">Link to blog</a>
                                                <span class="nofi_card_date">@nof.Date</span>
                                            </p>
                                            <div>
                                                <a onclick="handleDeleteNofitication(@nof.Id)">
                                                    <i class="close_icon bi bi-x"></i>
                                                </a>
                                            </div>
                                        </div>
                                        break;
                                    case "Like" :
                                        <div class="nofi_card">
                                            <p class="nofi_card_content">
                                                <a asp-action="Index" asp-controller="Profile" asp-route-id="@nof.SenderAccountId">@ViewBag.GetUserName(nof.SenderAccountId)</a> @nof.Content <a asp-route-id="@nof.BlogId" asp-action="Details" asp-controller="Blog">Link to blog</a>
                                                <span class="nofi_card_date">@nof.Date</span>
                                            </p>
                                            <div>
                                                <a onclick="handleDeleteNofitication(@nof.Id)">
                                                    <i class="close_icon bi bi-x"></i>
                                                </a>
                                            </div>
                                        </div>
                                        break;
                                    default:
                                
                                        break;
                                }
                            }
                        }
                    </div>
                </div>
            </div>
        }
        <a asp-controller="Chat" asp-action="Index" class="nav_item">
            @* <a asp-controller="Profile" asp-route-id="@UserManager.GetUserId(User)" asp-action="Index" class="nav_item"> *@
            <div class="navIcon text-center">
                <i class="icon bi bi-wechat"></i>
            </div>
            <div class="navTitle w-75 text-start my-auto">
                Messages
            </div>
        </a>
        <a asp-controller="Profile" asp-action="Index" class="nav_item">
            @* <a asp-controller="Profile" asp-route-id="@UserManager.GetUserId(User)" asp-action="Index" class="nav_item"> *@
            <div class="navIcon text-center">
                <i class="icon bi bi-person-circle"></i>
            </div>
            <div class="navTitle w-75 text-start my-auto">
                Profile
            </div>
        </a>
    </ul>
}